import java.text.SimpleDateFormat

buildscript {
    ext['seleniumVersion']='3.141.59'
    ext['gebVersion']='3.0.1'
    dependencies {
        classpath "org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}"
    }
}

plugins {
    id 'groovy'
    id 'java'
    id "idea"
    id "com.energizedwork.idea-base" version "1.4"
    id "org.sonarqube" version "2.8"
}

group 'provider'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

ext {
    drivers = ["chrome", "chromeHeadless"]
}

dependencies {
    testCompile 'org.codehaus.groovy:groovy-all:3.0.2'
    testCompile 'org.spockframework:spock-core:1.3-groovy-2.5'
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile 'io.github.bonigarcia:webdrivermanager:3.3.0'
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-server:$seleniumVersion"
    testCompile 'com.aoe:geb-spock-reports:0.2.5'
    testCompile ("com.athaydes:spock-reports:1.6.0") { transitive = false }
    testCompile 'org.slf4j:slf4j-api:1.7.30'
    testCompile 'org.slf4j:slf4j-simple:1.7.13'
    testCompile "org.apache.commons:commons-csv:1.8"
    testCompile "org.gebish:geb-junit4:$gebVersion"
}
drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
        systemProperties System.properties
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

def startTime
task printTimes {

    doLast {
        println "Test start time: " + startTime
        println "Test end time: " + getDate()
    }
}

tasks.withType(Test){
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

def getDate() {
    Date dNow = new Date()
    SimpleDateFormat ft = new SimpleDateFormat ("MM.dd.yyyy hh:mma")
    return ft.format(dNow)
}
